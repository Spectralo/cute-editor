
---
import { Icon } from 'astro-icon/components';

interface Props {
  text: string;
}

const { text = "Type here ..." } = Astro.props;
---

<div class="container">
    <textarea id="editor" spellcheck="false">{text}</textarea>
    <div class="icon">
        <Icon name="mdi:palette" size="2em" style="color: var(--text-color);" />
    </div>
</div>

<style>
    h1 {
        color: var(--text-color);
    }

    textarea {
        background-color: var(--background-color);
        color: var(--text-color);
        width: 100%;
        height: 100%;
        border: none;
        font-family: "Fira Code", monospace;
        font-weight: 700;
        font-size: 2em;
        resize: none;
    }

    textarea:focus {
        outline: none;
    }

    .container {
        display: flex;
        flex-direction: row;
        align-items: start;
        justify-content: start;
        height: 98vh;
        width: 98vw;
        padding-left: 1vw;
        padding-right: 1vw;
        padding-top: 1vh;
        padding-bottom: 1vh;
        background-color: var(--background-color);
    }

    .header {
        display: flex;
        align-items: center;
        margin-bottom: 1rem;
    }

    .icon {
        display: flex;
        justify-content: center;
        align-items: center;
        margin: 0.2em;
        padding: 0.5em;
        border-radius: 50%;
        transition: background-color 100ms ease;
    }

    .icon:hover {
        background-color: var(--surface-color);
        border-radius: 50%;
        transition: background-color 100ms linear;
        cursor: pointer;
    }

    .header {
        display: flex;
        align-items: flex-end;
        justify-content: flex-end;
    }
</style>

<script>
    import { marked } from "marked";
    const editor = document.getElementById("editor") as HTMLTextAreaElement;

    addEventListener("DOMContentLoaded", () => {
        editor.focus();
    });

    editor.addEventListener("keydown", (e) => {
        if (e.key === 'Tab') {
            e.preventDefault();
            const start = editor.selectionStart;
            const end = editor.selectionEnd;

            editor.value = editor.value.substring(0, start) +
                "\t" + editor.value.substring(end);

            editor.selectionStart = editor.selectionEnd = start + 1;
        }
    });
</script>
